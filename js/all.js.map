{"version":3,"sources":["all.js"],"names":["pomodoroTime","toolMissionName","missionArray","JSON","parse","localStorage","getItem","main","document","querySelector","inputMissionBtn","mission","missionList","missionMoreLink","missionComplete","missionCompleteList","missionName","pomodoro","pomodoroPlay","pomodoroPause","pomodoroStop","toolChart","toolMusic","circleValue","getCircleValue","parseInt","pomodoroCircleAnime","getAttribute","pomodoroWorkMinute","time","counter","temp","pomodoroRelaxMinute","tempCounter","pomodoroMinute","toolAllList","linkList","linkRingtone","tooltoDoList","toolAnalytic","toolRingtone","missionFoldedToDolist","toolListClose","missionFoldedDonelist","getCompleteCircleValue","toolMissionCountDown","inputMission","inputMissionFolded","addEventListener","toolPomodoroPause","push","value","addMission","tempCircleCompleteValue","circleCompleteValue","updateMission","setItem","stringify","nameStr","missionNameStr","forEach","item","index","array","completeStr","concat","completeListStr","listStr","innerHTML","classList","add","remove","listFoldStr","dataset","missionnum","updateTempMission","completeCircleAnime","e","target","nodeName","tempStr","num","tempMissionArray","pomodoroStart","pageName","setCitcleValue","countDownValue","countDownCompleteValue","pomodoroFinish","pomodoroRelaxFinish","pomodoroSecond","setInterval","pomodoroMinuteIfZero","pomodoroSecondIfZero","missionCountDown","setAttribute","toolPomodoroPlay","pomodoroUpdate","clearInterval","labels","clearPomodoro","label","borderWidth","options","legend","fontColor","scales","xAxes","gridLines","display","ticks","delMission","hideMainPage","toolList","changeLinkColor","linkAnalytic","inputMissionFoldedBtn","pausePomodoro","ringtonesArray","getContext","workRingtonesPlayNone","ctx","workRingtonesNone","breakRingtonesPlayNone","breakRingtonesNone","ringtonesWorkList","ringtonesBreakList","workNowPlay","backgroundColor","breakNowPlayBtn","play","workNowPlayBtn","playBreakRingtones","yAxes","ringtones","clearBreakkRingtones","preventDefault","load","playBtn","playWorkRingtones","children","breakNowPlay","loop"],"mappings":"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","file":"all.js","sourcesContent":["(() => {\r\n    // array variables\r\n    let missionArray = JSON.parse(localStorage.getItem('missionContent')) || [];\r\n    // let tempMissionArray = JSON.parse(localStorage.getItem('tempMissionContent')) || [];\r\n    let tempMissionArray = [];\r\n\r\n    // --------------------------------------\r\n    // variables\r\n    // --------------------------------------\r\n    let main = document.querySelector('.js-main'); // selector\r\n\r\n    // element\r\n    let inputMissionBtn = document.querySelector('.js-mission-btn');\r\n    let mission = document.querySelector('.js-mission');\r\n    let missionList = document.querySelector('.js-mission-list');\r\n    let missionMoreLink = document.querySelector('.js-mission-more-link');\r\n    let missionComplete = document.querySelector('.js-mission-complete');\r\n    let missionCompleteList = document.querySelector('.js-mission-complete-list');\r\n    let missionName = document.querySelector('.js-mission-name');\r\n    let missionCountDown = document.querySelector('.js-mission-countDown');\r\n\r\n    // pomodoro\r\n    let pomodoro = document.querySelector('.js-pomodoro');\r\n    let pomodoroPlay = document.querySelector('.js-pomodoro-play');\r\n    let pomodoroPause = document.querySelector('.js-pomodoro-pause');\r\n    let pomodoroStop = document.querySelector('.js-pomodoro-stop');\r\n\r\n    // link\r\n    let toolList = document.querySelector('.js-tool-list');\r\n    let toolChart = document.querySelector('.js-tool-chart');\r\n    let toolMusic = document.querySelector('.js-tool-music');\r\n\r\n    // circle variables\r\n    let pomodoroCircleAnime = document.querySelector('.js-pomodoro-animation-circle');\r\n    let getCircleValue = parseInt(pomodoroCircleAnime.getAttribute('stroke-dashoffset'));\r\n    let circleValue = getCircleValue; // 跑動畫的 variables\r\n\r\n    // pomodoro time variables\r\n    let pomodoroTime;\r\n    let pomodoroWorkMinute = { 'time': 25, 'counter': 0, 'temp': 0 }; // 初始時間：25 min  跑過幾次  暫停時間\r\n    let pomodoroRelaxMinute = { 'time': 5, 'counter': 0, 'temp': 0 }; // 初始時間： 5 min\r\n    let tempCounter = 0; // 計算暫停次數\r\n    let pomodoroMinute = 0; // 跑動畫 Minute\r\n    let pomodoroSecond = 0; // 跑動畫 Second\r\n\r\n    // --------------------------------------\r\n    // todoList page variables\r\n    // --------------------------------------\r\n    let toolAllList = document.querySelector('.js-tool-allList');\r\n    // link\r\n    let linkList = document.querySelector('.js-link-toDOlist');\r\n    let linkAnalytic = document.querySelector('.js-link-analytic');\r\n    let linkRingtone = document.querySelector('.js-link-ringtone');\r\n    // content\r\n    let tooltoDoList = document.querySelector('.js-tool-toDoList');\r\n    let toolAnalytic = document.querySelector('.js-tool-analytic');\r\n    let toolRingtone = document.querySelector('.js-tool-ringtone');\r\n    // element\r\n    let inputMissionFoldedBtn = document.querySelector('.js-mission-btn-folded');\r\n    let missionFoldedToDolist = document.querySelector('.js-mission-folded-toDolist');\r\n    let missionFoldedDonelist = document.querySelector('.js-mission-folded-donelist');\r\n    // pomodoro\r\n    let toolMissionCountDown = document.querySelector('.js-tool-time-countDown');\r\n    let toolMissionName = document.querySelector('.js-tool-time-name');\r\n    let toolPomodoroPlay = document.querySelector('.js-tool-pomodoro-play');\r\n    let toolPomodoroPause = document.querySelector('.js-tool-pomodoro-pause');\r\n    // close\r\n    let toolListClose = document.querySelector('.js-tool-list-close');\r\n\r\n    // input circle variables\r\n    let completeCircleAnime = \"\";\r\n    let getCompleteCircleValue = 0;\r\n    let circleCompleteValue = 0;\r\n    let tempCircleCompleteValue; // 暫存 circle 值 (避免更新 input list 後重跑)\r\n\r\n\r\n    // --------------------------------------\r\n    // mission 監聽\r\n    // --------------------------------------\r\n    inputMissionBtn.addEventListener('click', addMission); // 輸入監聽\r\n    missionList.addEventListener('click', delMission); // missionList Btn 監聽\r\n    missionComplete.addEventListener('click', delMission); // missionComplete Btn 監聽\r\n\r\n    missionMoreLink.addEventListener('click', () => hideMainPage());\r\n    toolList.addEventListener('click', () => {\r\n        hideMainPage(toolAllList);\r\n        hideMainPage(tooltoDoList);\r\n        changeLinkColor(linkList);\r\n    });\r\n    toolChart.addEventListener('click', () => {\r\n        hideMainPage(toolAllList);\r\n        hideMainPage(toolAnalytic);\r\n        changeLinkColor(linkAnalytic);\r\n    });\r\n    toolMusic.addEventListener('click', () => {\r\n        hideMainPage(toolAllList);\r\n        hideMainPage(toolRingtone);\r\n        changeLinkColor(linkRingtone);\r\n    });\r\n    toolListClose.addEventListener('click', () => showMainPage(toolAllList));\r\n\r\n    // todo List Page\r\n    inputMissionFoldedBtn.addEventListener('click', addMission);\r\n    missionFoldedToDolist.addEventListener('click', delMission);\r\n\r\n\r\n    // --------------------------------------\r\n    // pomodoro 監聽\r\n    // --------------------------------------\r\n    pomodoroPlay.addEventListener('click', () => {\r\n        // pomodoro 開始後樣式\r\n        pomodoro.classList.add('active');\r\n        // 休息 5 分結束後，從 25 分重新開始計算\r\n        if (pomodoroWorkMinute['counter'] < pomodoroRelaxMinute['counter']) {\r\n            // 判斷是否有暫停\r\n            if (tempCounter > 0) {\r\n                pomodoroMinute = pomodoroWorkMinute['temp'];\r\n            } else {\r\n                pomodoroMinute = pomodoroWorkMinute['time'];\r\n            }\r\n            pomodoroStart(pomodoroMinute);\r\n        }\r\n        // 工作 25 分結束後，從 5 分重新開始計算\r\n        else if (pomodoroWorkMinute['counter'] > pomodoroRelaxMinute['counter']) {\r\n            if (tempCounter > 0) {\r\n                pomodoroMinute = pomodoroRelaxMinute['temp'];\r\n            } else {\r\n                pomodoroMinute = pomodoroRelaxMinute['time'];\r\n            }\r\n            pomodoroStart(pomodoroMinute);\r\n        }\r\n        else {\r\n            if (tempCounter > 0) {\r\n                pomodoroMinute = pomodoroWorkMinute['temp'];\r\n            } else {\r\n                pomodoroMinute = pomodoroWorkMinute['time'];\r\n            }\r\n\r\n            pomodoroStart(pomodoroMinute);\r\n        }\r\n    }); // pomodoro 計時監聽\r\n    pomodoroPause.addEventListener('click', pausePomodoro); // pomodoro 暫停監聽\r\n    pomodoroStop.addEventListener('click', clearPomodoro);  // pomodoro 停止監聽\r\n\r\n\r\n    // todo List Page\r\n    toolPomodoroPlay.addEventListener('click', () => {\r\n        // pomodoro 開始後樣式\r\n        pomodoro.classList.add('active');\r\n        // 休息 5 分結束後，從 25 分重新開始計算\r\n        if (pomodoroWorkMinute['counter'] < pomodoroRelaxMinute['counter']) {\r\n            // 判斷是否有暫停\r\n            if (tempCounter > 0) {\r\n                pomodoroMinute = pomodoroWorkMinute['temp'];\r\n            } else {\r\n                pomodoroMinute = pomodoroWorkMinute['time'];\r\n            }\r\n            pomodoroStart(pomodoroMinute);\r\n        }\r\n        // 工作 25 分結束後，從 5 分重新開始計算\r\n        else if (pomodoroWorkMinute['counter'] > pomodoroRelaxMinute['counter']) {\r\n            if (tempCounter > 0) {\r\n                pomodoroMinute = pomodoroRelaxMinute['temp'];\r\n            } else {\r\n                pomodoroMinute = pomodoroRelaxMinute['time'];\r\n            }\r\n            pomodoroStart(pomodoroMinute);\r\n        }\r\n        else {\r\n            if (tempCounter > 0) {\r\n                pomodoroMinute = pomodoroWorkMinute['temp'];\r\n            } else {\r\n                pomodoroMinute = pomodoroWorkMinute['time'];\r\n            }\r\n\r\n            pomodoroStart(pomodoroMinute);\r\n        }\r\n    }); // pomodoro 計時監聽\r\n    toolPomodoroPause.addEventListener('click', pausePomodoro); // pomodoro 暫停監聽\r\n\r\n    // --------------------------------------\r\n    // mission \r\n    // --------------------------------------\r\n    // 新增 mission\r\n    function addMission() {\r\n        // 取得 input 內容，並 push 到陣列\r\n        let inputMission = document.querySelector('.js-mission-input');\r\n\r\n        // todoList page\r\n        let inputMissionFolded = document.querySelector('.js-mission-input-folded');\r\n\r\n        if (inputMission.value !== '') {\r\n            missionArray.push(inputMission.value);\r\n        } else if (inputMissionFolded.value !== '') {\r\n            missionArray.push(inputMissionFolded.value);\r\n        }\r\n        else {\r\n            missionArray.push(inputMission.value);\r\n        }\r\n\r\n        tempCircleCompleteValue = circleCompleteValue; //暫存 circle 值\r\n        updateMission();\r\n        inputMission.value = '';\r\n        inputMissionFolded.value = '';\r\n    }\r\n\r\n    // 更新 mission\r\n    function updateMission() {\r\n        // array 轉成 string，儲存到 localStorage\r\n        localStorage.setItem('missionContent', JSON.stringify(missionArray));\r\n\r\n        let completeStr = \"\";\r\n        let nameStr = \"\";\r\n        let completeListStr = \"\";\r\n        let listStr = \"\";\r\n        let listFoldStr = \"\";\r\n        let missionNameStr = \"\";\r\n\r\n        missionArray.forEach((item, index, array) => {\r\n            // 第 0 筆顯示番茄鐘時間，其餘顯示在 list 中\r\n            if (index === 0) {\r\n                completeStr = `<div class=\"mission-complete d-flex justify-content-center align-items-center\" data-missionnum=${index}></div>`;\r\n                nameStr = `<span class=\"mission-name text-info text-uppercase font-weight-bold\">${array[index]}</span>`;\r\n                completeListStr += `\r\n                    <svg class=\"mission-complete-item\">\r\n                        <circle class=\"pomodoro-animation-circle js-complete-animation-circle\" cx=\"50%\" cy=\"50%\" r=\"5\" stroke-dashoffset=\"37\"></circle>\r\n                    </svg>\r\n                `;\r\n            } else {\r\n                listStr += `\r\n                    <li class=\"mission-item d-flex align-items-center\">\r\n                        <div class=\"mission-item-complete d-flex justify-content-center align-items-center\" data-missionnum=${index}></div>\r\n                        <div class=\"mission-item-name text-info ml-2 font-weight-bold text-uppercase\"><span>${array[index]}</span></div>\r\n                        <div class=\"mission-item-pomodoro d-flex justify-content-center align-items-center\">\r\n                            <i class=\"material-icons text-info\">play_arrow</i>\r\n                        </div>\r\n                    </li>\r\n                `;\r\n            }\r\n            // todoList page\r\n            listFoldStr += `\r\n                <li class=\"mission-item mb-2 d-flex align-items-center\">\r\n                    <div class=\"mission-item-complete bg-light d-flex justify-content-center align-items-center\" data-missionnum=${index}></div>\r\n                    <section class=\"mission-item-name text-info ml-2 font-weight-bold text-uppercase\">\r\n                        <span class=\"text-light\">${item}</span></section>\r\n                    <section class=\"mission-item-pomodoro d-flex justify-content-center align-items-center bg-light\">\r\n                        <i class=\"material-icons text-info\">play_arrow</i>\r\n                    </section>\r\n                </li>\r\n                `;\r\n            missionNameStr = array[0];\r\n\r\n\r\n            // 超過 4 筆 mission 增加動畫效果\r\n            if (array.length > 4) {\r\n                missionMoreLink.classList.add('active');\r\n            } else {\r\n                missionMoreLink.classList.remove('active');\r\n            }\r\n        });\r\n\r\n        missionComplete.innerHTML = completeStr;\r\n        missionName.innerHTML = nameStr;\r\n        missionCompleteList.innerHTML = completeListStr;\r\n        missionList.innerHTML = listStr;\r\n\r\n        // todoList page\r\n        missionFoldedToDolist.innerHTML = listFoldStr;\r\n        toolMissionName.innerHTML = missionNameStr;\r\n\r\n        // 判斷是否關閉 play 按鈕，並取得 completeCircle 的值\r\n        if (typeof missionArray[0] !== 'undefined') {\r\n            pomodoroPlay.classList.remove('disabled');\r\n\r\n            // 取得 completeCircle 的值\r\n            completeCircleAnime = document.querySelector('.js-complete-animation-circle');\r\n            getCompleteCircleValue = parseInt(completeCircleAnime.getAttribute('stroke-dashoffset'));\r\n            circleCompleteValue = tempCircleCompleteValue || getCompleteCircleValue;\r\n        } else {\r\n            pomodoroPlay.classList.add('disabled');\r\n        }\r\n    }\r\n\r\n    // 刪除 mission\r\n    function delMission(e) {\r\n        if (e.target.nodeName !== \"DIV\") return;\r\n        e.preventDefault();\r\n\r\n        // 取得 data-missionnum\r\n        let num = e.target.dataset.missionnum;\r\n\r\n        // 把值存到 tempmissionArray，並更新畫面\r\n        tempMissionArray.push(missionArray[num]);\r\n        updateTempMission();\r\n\r\n        // 刪除\r\n        missionArray.splice(num, 1);\r\n\r\n        tempCircleCompleteValue = circleCompleteValue; // 暫存 circle 值\r\n\r\n        updateMission();\r\n    }\r\n\r\n    // 顯示暫存 mission\r\n    function updateTempMission() {\r\n        // localStorage.setItem('tempMissionContent', JSON.stringify(tempMissionArray));\r\n\r\n        let tempStr = '';\r\n        tempMissionArray.forEach((item, index) => {\r\n            tempStr += `\r\n                <li class=\"mission-item mb-2 d-flex align-items-center\">\r\n                    <div class=\"mission-item-complete active bg-light d-flex justify-content-center align-items-center\"></div>\r\n                    <section class=\"mission-item-name ml-2 font-weight-bold text-uppercase\">\r\n                        <del class=\"text-light text-decoration\">${ item}</del>\r\n                    </section>\r\n                    <section class=\"mission-item-pomodoro d-flex justify-content-center align-items-center bg-light\"></section>\r\n                </li>\r\n            `;\r\n        });\r\n\r\n        missionFoldedDonelist.innerHTML = tempStr;\r\n    }\r\n\r\n    // 顯示點擊的頁面\r\n    function hideMainPage(pageName) {\r\n        pageName.classList.remove('d-none');\r\n        main.classList.add('d-none');\r\n    }\r\n\r\n    // 改變 page 連結顏色\r\n    function changeLinkColor(link) {\r\n        link.classList.remove('text-dark');\r\n        link.classList.add('text-primary');\r\n    }\r\n\r\n    // close btn 關閉頁面、清除所有樣式\r\n    function showMainPage() {\r\n        toolAllList.classList.add('d-none');\r\n        tooltoDoList.classList.add('d-none');\r\n        toolAnalytic.classList.add('d-none');\r\n        toolRingtone.classList.add('d-none');\r\n        linkList.classList.add('text-dark');\r\n        linkAnalytic.classList.add('text-dark');\r\n        linkRingtone.classList.add('text-dark');\r\n        linkList.classList.remove('text-primary');\r\n        linkAnalytic.classList.remove('text-primary');\r\n        linkRingtone.classList.remove('text-primary');\r\n        main.classList.remove('d-none');\r\n        main.classList.add('animation');\r\n    }\r\n\r\n    // --------------------------------------\r\n    // pomodoro \r\n    // --------------------------------------\r\n    function pomodoroStart() {\r\n        let setCitcleValue = '';\r\n        // 顯示 play icon\r\n        pomodoroPlay.classList.add('d-none');\r\n        pomodoroPause.classList.remove('d-none');\r\n        toolPomodoroPlay.classList.add('d-none');\r\n        toolPomodoroPause.classList.remove('d-none');\r\n\r\n        let countDownValue = 0;\r\n        let countDownCompleteValue = 0;\r\n\r\n        // circle 動畫，判斷載入哪一個時間\r\n        if (pomodoroWorkMinute['counter'] < pomodoroRelaxMinute['counter']) {\r\n            // 除 60s 能跑一圈 -> 乘上分鐘 = 每秒能跑多少\r\n            countDownValue = (getCircleValue / (60 * pomodoroWorkMinute['time']));\r\n            countDownCompleteValue = (getCompleteCircleValue / (60 * pomodoroWorkMinute['time']));\r\n        }\r\n        else if (pomodoroWorkMinute['counter'] > pomodoroRelaxMinute['counter']) {\r\n            countDownValue = (getCircleValue / (60 * pomodoroRelaxMinute['time']));\r\n            countDownCompleteValue = (getCompleteCircleValue / (60 * pomodoroRelaxMinute['time']));\r\n        }\r\n        else {\r\n            countDownValue = (getCircleValue / (60 * pomodoroWorkMinute['time']));\r\n            countDownCompleteValue = (getCompleteCircleValue / (60 * pomodoroWorkMinute['time']));\r\n        }\r\n\r\n        // 倒數計時\r\n        pomodoroTime = setInterval(() => {\r\n            // circle 動畫，每秒跑動畫\r\n            circleValue -= countDownValue;\r\n            circleCompleteValue -= countDownCompleteValue;\r\n            pomodoroCircleAnime.setAttribute('stroke-dashoffset', circleValue);\r\n            completeCircleAnime.setAttribute('stroke-dashoffset', circleCompleteValue);\r\n\r\n\r\n            // 當 minute 和 second 為 0 停止計時，並判斷結束樣式\r\n            if (pomodoroMinute === 0 && pomodoroSecond === 0) {\r\n                // 判斷到哪個樣式\r\n                if (pomodoroWorkMinute['counter'] < pomodoroRelaxMinute['counter']) {\r\n                    pomodoroFinish();\r\n                }\r\n                else if (pomodoroWorkMinute['counter'] > pomodoroRelaxMinute['counter']) {\r\n                    pomodoroRelaxFinish()\r\n                }\r\n                else {\r\n                    pomodoroFinish();\r\n                }\r\n\r\n                clearPomodoro();\r\n                return;\r\n            }\r\n            else {\r\n                // second 為 0，從 60 秒倒數、分鐘 -1\r\n                if (pomodoroSecond === 0) {\r\n                    pomodoroSecond = 60; // 60sec\r\n                    pomodoroMinute--;\r\n                }\r\n                // 倒數\r\n                pomodoroSecond--;\r\n            }\r\n\r\n            pomodoroUpdate();\r\n        }, 1000); // 每秒跑 function\r\n    }\r\n\r\n    function pomodoroUpdate() {\r\n        // 判斷是否小於 10，小於 10 則加 0 到數字上 (09、08 ...)\r\n        let pomodoroMinuteIfZero = (pomodoroMinute < 10 && pomodoroMinute >= 0) ? '0' + pomodoroMinute : pomodoroMinute;\r\n        let pomodoroSecondIfZero = (pomodoroSecond < 10 && pomodoroSecond >= 0) ? '0' + pomodoroSecond : pomodoroSecond;\r\n\r\n        missionCountDown.innerHTML = pomodoroMinuteIfZero + \":\" + pomodoroSecondIfZero;\r\n        toolMissionCountDown.innerHTML = pomodoroMinuteIfZero + \":\" + pomodoroSecondIfZero;\r\n    }\r\n\r\n    // pomodoro 結束樣式\r\n    function pomodoroFinish() {\r\n        mission.classList.remove('mission-primary');\r\n        mission.classList.add('mission-secondary');\r\n        pomodoro.classList.remove('pomodoro-primary');\r\n        pomodoro.classList.add('pomodoro-secondary');\r\n        // pomodoro 跑完加 1\r\n        pomodoroWorkMinute['counter']++;\r\n    }\r\n\r\n    // pomodoro relax 結束樣式\r\n    function pomodoroRelaxFinish() {\r\n        mission.classList.add('mission-primary');\r\n        mission.classList.remove('mission-secondary');\r\n        pomodoro.classList.add('pomodoro-primary');\r\n        pomodoro.classList.remove('pomodoro-secondary');\r\n        // relax 跑完加 1\r\n        pomodoroRelaxMinute['counter']++;\r\n    }\r\n\r\n    // pomodoro 暫停\r\n    function pausePomodoro() {\r\n        pomodoro.classList.remove('active');\r\n        pomodoroPlay.classList.remove('d-none');\r\n        pomodoroPause.classList.add('d-none');\r\n        toolPomodoroPlay.classList.remove('d-none');\r\n        toolPomodoroPause.classList.add('d-none');\r\n        pomodoroWorkMinute['temp'] = pomodoroMinute;\r\n        pomodoroRelaxMinute['temp'] = pomodoroMinute;\r\n        tempCounter++;\r\n        clearInterval(pomodoroTime);\r\n        return;\r\n    }\r\n\r\n    // 清除 pomodoro\r\n    function clearPomodoro() {\r\n        // 停止計時\r\n        clearInterval(pomodoroTime);\r\n\r\n        // 取消開始後的狀態\r\n        pomodoro.classList.remove('active');\r\n\r\n        // 隱藏 pause icon\r\n        pomodoroPlay.classList.remove('d-none');\r\n        pomodoroPause.classList.add('d-none');\r\n\r\n        // 結束後，清空 tempCounter (暫停次數)\r\n        tempCounter = 0;\r\n\r\n        // 恢復 circle 預設值\r\n        circleValue = getCircleValue;\r\n        pomodoroCircleAnime.setAttribute('stroke-dashoffset', circleValue);\r\n        circleCompleteValue = getCompleteCircleValue;\r\n        completeCircleAnime.setAttribute('stroke-dashoffset', circleCompleteValue);\r\n\r\n        // 恢復 25 / 5 分字樣\r\n        if (pomodoroWorkMinute['counter'] < pomodoroRelaxMinute['counter']) {\r\n            pomodoroMinute = 25\r\n            pomodoroSecond = 0;\r\n        }\r\n        else if (pomodoroWorkMinute['counter'] > pomodoroRelaxMinute['counter']) {\r\n            pomodoroMinute = 5\r\n            pomodoroSecond = 0;\r\n        }\r\n        else {\r\n            pomodoroMinute = 25\r\n            pomodoroSecond = 0;\r\n        }\r\n\r\n        pomodoroUpdate();\r\n\r\n        return;\r\n    }\r\n\r\n    // --------------------------------------\r\n    // chart 圖表\r\n    // --------------------------------------\r\n    var ctx = document.querySelector('.myChart').getContext('2d');\r\n    var myChart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: ['7/1', '7/2', '7/3', '7/4', '7/5', '7/6', '7/7'],\r\n            datasets: [{\r\n                label: 'Bar Dataset',\r\n                data: [16, 12, 16, 8, 12, 4, 20],\r\n                backgroundColor: [\r\n                    'rgba(255, 255, 255)',\r\n                    'rgba(255, 255, 255)',\r\n                    'rgba(255, 255, 255)',\r\n                    'rgba(255, 255, 255)',\r\n                    'rgba(255, 255, 255)',\r\n                    'rgba(255, 255, 255)',\r\n                    'rgba(255, 67, 132)'\r\n                ],\r\n                borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            legend: {\r\n                labels: {\r\n                    // This more specific font property overrides the global property\r\n                    fontColor: 'white',\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    gridLines: {\r\n                        display: false, // close x 軸線條\r\n                    },\r\n                    ticks: {\r\n                        fontColor: \"white\", // font color\r\n                    },\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display: false, // close y 軸線條\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        fontColor: \"white\",\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    });\r\n\r\n    // --------------------------------------\r\n    // ringtones\r\n    // --------------------------------------\r\n    let ringtonesArray = ['none', 'default', 'alarm', 'alert', 'beep', 'bell', 'bird', 'bugle', 'digital', 'drop', 'horn', 'music', 'ring', 'warning', 'whistle'];\r\n    let workRingtonesPlayNone = document.querySelector('.js-work-ringtones-play-none');\r\n    let workRingtonesNone = document.querySelector('.js-work-ringtones-none');\r\n\r\n    let breakRingtonesPlayNone = document.querySelector('.js-break-ringtones-play-none');\r\n    let breakRingtonesNone = document.querySelector('.js-break-ringtones-none');\r\n\r\n    let ringtonesWorkList = document.querySelector('.js-ringtone-work-list');\r\n    let ringtonesBreakList = document.querySelector('.js-ringtone-break-list');\r\n\r\n    let workNowPlay = workRingtonesNone; // 記錄正在播放的鈴聲\r\n    let workNowPlayBtn = workRingtonesPlayNone; // 記錄正在播放的按鈕\r\n\r\n    let breakNowPlay = breakRingtonesNone; // 記錄正在播放的鈴聲\r\n    let breakNowPlayBtn = breakRingtonesPlayNone; // 記錄正在播放的按鈕\r\n\r\n\r\n    // 播放 Work 鈴聲\r\n    function playWorkRingtones(ringtones, playBtn) {\r\n        ringtones.play();\r\n        ringtones.loop = true;\r\n        playBtn.classList.add('active');\r\n        workNowPlay = ringtones;\r\n        workNowPlayBtn = playBtn;\r\n    }\r\n\r\n    // 清除 Work 鈴聲和按鈕\r\n    function clearWorkRingtones() {\r\n        workNowPlay.load(); // 重新載入鈴聲\r\n        workNowPlayBtn.classList.remove('active');\r\n    }\r\n\r\n    // 播放 Work 鈴聲\r\n    function playBreakRingtones(ringtones, playBtn) {\r\n        ringtones.play();\r\n        ringtones.loop = true;\r\n        playBtn.classList.add('active');\r\n        breakNowPlay = ringtones;\r\n        breakNowPlayBtn = playBtn;\r\n    }\r\n\r\n    // 清除 Work 鈴聲和按鈕\r\n    function clearBreakkRingtones() {\r\n        breakNowPlay.load(); // 重新載入鈴聲\r\n        breakNowPlayBtn.classList.remove('active');\r\n    }\r\n\r\n    // 監聽\r\n    ringtonesWorkList.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        // 把 SECTION 以外的元素擋掉\r\n        if (e.target.nodeName !== 'SECTION') return;\r\n\r\n        ringtonesArray.forEach((item) => {\r\n            // 判斷 classList 的 class name 是否相同\r\n            if (e.target.classList[1] === `js-work-ringtones-play-${item}`) {\r\n                clearWorkRingtones();\r\n                // e.target.children[0] 傳入子元素\r\n                // e.target 傳入當下的元素\r\n                playWorkRingtones(e.target.children[0], e.target);\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    ringtonesBreakList.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        // 把 SECTION 以外的元素擋掉\r\n        if (e.target.nodeName !== 'SECTION') return;\r\n\r\n        ringtonesArray.forEach((item) => {\r\n            // 判斷 classList 的 class name 是否相同\r\n            if (e.target.classList[1] === `js-break-ringtones-play-${item}`) {\r\n                clearBreakkRingtones();\r\n                // e.target.children[0] 傳入子元素\r\n                // e.target 傳入當下的元素\r\n                playBreakRingtones(e.target.children[0], e.target);\r\n            }\r\n        });\r\n    });\r\n\r\n    // --------------------------------------\r\n    // 更新 input list\r\n    // --------------------------------------\r\n    updateMission();\r\n})();"]}